package Main.Graphics;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import Main.Building.Terminal;
import Main.City;
import Main.Exception.Enough_passenger_exception;
import Main.Exception.Invalid_TerminalName;
import Main.Exception.No_Vehicle_In_Terminal_Exception;
import Main.Exception.Terminal_Vehicle_Capacity_Exception;
import Main.Main;
import Main.Person;
import Main.Vehicles.CargoPlane;
import Main.Vehicles.Vehicle;

import javax.swing.*;
import java.util.ArrayList;

/**
 *
 * @author erfan
 */
public class JourneyGUI extends javax.swing.JFrame implements Runnable{

    boolean exit = false ;
    int price ;
    Terminal startingTerminal = null;
    City destinationCity;
    Terminal destinationTerminal = null;
    int passengersAmount ;
    ArrayList<Person> passengersArrayList =new ArrayList<>();
    Vehicle vehicle;
    Person driver;
    String id ;
    int journeyDay;
    int journeyMonth;

    //======================================================================================

    DefaultListModel<String> dlm1 = new DefaultListModel<>();   //Starting Terminals
    DefaultListModel<String> dlm2 = new DefaultListModel<>();   //Destination Cities
    DefaultListModel<String> dlm3 = new DefaultListModel<>();   //Destination Terminals
    DefaultListModel<String> dlm4 = new DefaultListModel<>();   //people ID list
    DefaultListModel<String> dlm5 = new DefaultListModel<>();   //Vehicles IDs List
    DefaultListModel<String> dlm6 = new DefaultListModel<>();   //Drivers IDs List



    //======================================================================================

    String[] getStringArray(int number){

        String[] str = new String[number];

        for (int i=0 ; i <number ; i++)
            str[i] = String.valueOf( i+1 ) ;

        return str;
    }

    void setDlm1(){

        dlm1.removeAllElements();
        for(Terminal a : Main.selectedCity.getAllTerminals() )
            this.dlm1.addElement(a.getTerminalName());

    }

    void setDlm2(){

        dlm2.removeAllElements();
        for(City a : City.getCitiesList() )
            this.dlm2.addElement(a.getCityName());

        dlm2.removeElement(Main.selectedCity.getCityName());
    }

    void setDlm3(){

        dlm3.removeAllElements();

        for(Terminal a : this.destinationCity.getAllTerminals() ) {

            if (a.getTerminalType().equals( startingTerminal.getTerminalType() ))
                this.dlm3.addElement(a.getTerminalName());

        }

    }

    void setDlm4(){

        dlm4.removeAllElements();
        for( Person a : Main.selectedCity.getPersonList() ) {

            if( ! a.getHired() && ! this.passengersArrayList.contains(a))
                this.dlm4.addElement(String.valueOf( a.getID() ));

        }
    }

    void setDlm5(){

        dlm5.removeAllElements();
        for(Vehicle a : this.startingTerminal.getVehiclesList() )
            this.dlm5.addElement(a.getID());

    }

    void setDlm6(){

        dlm6.removeAllElements();
        for(Person a : this.startingTerminal.getDriversList() ) {
            this.dlm6.addElement(String.valueOf(a.getID()));
        }

    }




    /**
     * Creates new form JourneyGUI
     */
    Thread t ;
    public JourneyGUI() {

        initComponents();
        setVisible(true);

        t = new Thread(this);
        t.start();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        setDlm1();
        setDlm2();
        setDlm4();

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        destinationList = new javax.swing.JList<>(dlm2);
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        startingTerminalList = new javax.swing.JList<>(dlm1);
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        destinationTerminalsList = new javax.swing.JList<>(dlm3);
        jLabel4 = new javax.swing.JLabel();
        numberOfPassengers = new javax.swing.JSpinner();
        jScrollPane4 = new javax.swing.JScrollPane();
        peopleIDsList = new javax.swing.JList<>(dlm4);
        jScrollPane5 = new javax.swing.JScrollPane();
        passengers = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        vehicleIDsList = new javax.swing.JList<>(dlm5);
        jLabel7 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        driverIdList = new javax.swing.JList<>(dlm6);
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        journeyID = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        month = new javax.swing.JComboBox<>();
        day = new javax.swing.JComboBox<>();
        journeyButton = new javax.swing.JToggleButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        ticketPrice = new javax.swing.JSpinner();

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Destination City :");

//        destinationList.setModel(new javax.swing.AbstractListModel<String>() {
//            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
//            public int getSize() { return strings.length; }
//            public String getElementAt(int i) { return strings[i]; }
//        });
        jScrollPane1.setViewportView(destinationList);

        jLabel2.setText("Starting Terminal :");

//        startingTerminalList.setModel(new javax.swing.AbstractListModel<String>() {
//            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
//            public int getSize() { return strings.length; }
//            public String getElementAt(int i) { return strings[i]; }
//        });
        jScrollPane2.setViewportView(startingTerminalList);

        jLabel3.setText("Destination Terminal :");

//        destinationTerminalsList.setModel(new javax.swing.AbstractListModel<String>() {
//            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
//            public int getSize() { return strings.length; }
//            public String getElementAt(int i) { return strings[i]; }
//        });
        jScrollPane3.setViewportView(destinationTerminalsList);

        jLabel4.setText("Number Of Passengers :");

//        peopleIDsList.setModel(new javax.swing.AbstractListModel<String>() {
//            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
//            public int getSize() { return strings.length; }
//            public String getElementAt(int i) { return strings[i]; }
//        });
        jScrollPane4.setViewportView(peopleIDsList);

        passengers.setColumns(20);
        passengers.setRows(5);
        jScrollPane5.setViewportView(passengers);

        jLabel5.setText("Passengers \"");

        jLabel6.setText("People :");

//        vehicleIDsList.setModel(new javax.swing.AbstractListModel<String>() {
//            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
//            public int getSize() { return strings.length; }
//            public String getElementAt(int i) { return strings[i]; }
//        });
        jScrollPane6.setViewportView(vehicleIDsList);

        jLabel7.setText("Vehicles :");

//        driverIdList.setModel(new javax.swing.AbstractListModel<String>() {
//            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
//            public int getSize() { return strings.length; }
//            public String getElementAt(int i) { return strings[i]; }
//        });
        jScrollPane7.setViewportView(driverIdList);

        jLabel8.setText("Drivers :");

        jLabel9.setText("Journey ID :");

        jLabel10.setText("Day :");

        jLabel11.setText("Month :");

        month.setModel(new javax.swing.DefaultComboBoxModel<>(getStringArray(12)));
        month.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthActionPerformed(evt);
            }
        });

        day.setModel(new javax.swing.DefaultComboBoxModel<>(getStringArray(30)));
        day.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dayActionPerformed(evt);
            }
        });

        journeyButton.setText("Make Journey");
        journeyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                journeyButtonActionPerformed(evt);
            }
        });

        jLabel12.setForeground(new java.awt.Color(255, 0, 0));

        jLabel13.setText("Ticket Price :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(67, 67, 67))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(475, 475, 475)
                                                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(ticketPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(43, 43, 43)))
                                                .addComponent(journeyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(6, 6, 6)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                                                                                .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.LEADING)))))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(45, 45, 45)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addGap(44, 44, 44)
                                                                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addGap(57, 57, 57)
                                                                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addGap(38, 38, 38)
                                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                                        .addGroup(layout.createSequentialGroup()
                                                                                                .addComponent(jLabel11)
                                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                                .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                                        .addGroup(layout.createSequentialGroup()
                                                                                                .addComponent(jLabel10)
                                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                                .addComponent(day, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                        .addComponent(numberOfPassengers, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(29, 29, 29)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(jLabel8)
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                        .addGroup(layout.createSequentialGroup()
                                                                                                .addGap(65, 65, 65)
                                                                                                .addComponent(journeyID, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                                        .addGroup(layout.createSequentialGroup()
                                                                                                .addGap(75, 75, 75)
                                                                                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                                                .addGap(43, 43, 43)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(29, 29, 29))
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                                .addComponent(jLabel6)
                                                                .addGap(43, 43, 43)))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel6))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jScrollPane1)
                                        .addComponent(jScrollPane2)
                                        .addComponent(jScrollPane3)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(numberOfPassengers, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jScrollPane4)
                                        .addComponent(jScrollPane5))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(101, 101, 101)
                                                .addComponent(journeyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(93, 93, 93)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jLabel7)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jLabel8)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addGap(6, 6, 6)
                                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                                                .addComponent(jLabel10)
                                                                                                .addComponent(day, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                                        .addComponent(journeyID, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                        .addComponent(jLabel11)
                                                                                        .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel13)
                                                        .addComponent(ticketPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(38, 38, 38))))
        );

        pack();
    }// </editor-fold>



    private void journeyButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:


        this.destinationTerminal = Terminal.getTerminalByName( destinationTerminalsList.getSelectedValue() );
//        System.out.println(destinationTerminal.getTerminalName());



        this.vehicle = Vehicle.getVehicleByID(vehicleIDsList.getSelectedValue());
//        System.out.println("Vehicle " + vehicle.getID());

        this.driver = Person.find_Person_from_ID( Integer.valueOf( driverIdList.getSelectedValue() ) );
//        System.out.println("Driver " + driver.getID());

        this.id = journeyID.getText();
//        System.out.println("journey id " + id);

        this.price = (int)ticketPrice.getValue();
//        System.out.println("Price = " + price);


        try {
            checkTerminalsValidity(startingTerminal , destinationTerminal);
            checkVehicleValidity(vehicle , startingTerminal , passengersAmount);
            this.startingTerminal.newJourney( startingTerminal , destinationTerminal , passengersArrayList , driver ,vehicle , id , journeyDay , journeyMonth , price);

        }
        catch (RuntimeException ex){
            jLabel12.setText( ex.toString() );
            return;
        }



        dispose();
        exit = true;


    }



    private void dayActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:

        this.journeyDay =  day.getSelectedIndex()+1 ;
    }

    private void monthActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:

        this.journeyMonth =  month.getSelectedIndex()+1;
    }



    static void checkTerminalsValidity(Terminal starting , Terminal destination){


        if (starting.getVehiclesList().size() == 0)
            throw new No_Vehicle_In_Terminal_Exception();

        if (destination.getVehiclesList().size() >= destination.max_number_of_vehicle())
            throw new Terminal_Vehicle_Capacity_Exception();


    }

    static void checkVehicleValidity(Vehicle selectedVehicle, Terminal startingTerminal , int numberOfPassengers) {




//        if ( selectedVehicle instanceof CargoPlane)
//            throw new Vehicle_type_Exception("Can not use a Cargo airplane for transform passengers");
//


//
        if ( numberOfPassengers < selectedVehicle.getCapacity()/2D )
            throw new Enough_passenger_exception("At least half of passenger capacity must be reserved");

        if (numberOfPassengers > selectedVehicle.getCapacity()){
            throw new Enough_passenger_exception("Number of passengers is more than selected vehicle passenger capacity");
        }



    }



    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify
    private javax.swing.JComboBox<String> day;
    private javax.swing.JList<String> destinationList;
    private javax.swing.JList<String> destinationTerminalsList;
    private javax.swing.JList<String> driverIdList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JToggleButton journeyButton;
    private javax.swing.JTextField journeyID;
    private javax.swing.JComboBox<String> month;
    private javax.swing.JSpinner numberOfPassengers;
    private javax.swing.JTextArea passengers;
    private javax.swing.JList<String> peopleIDsList;
    private javax.swing.JList<String> startingTerminalList;
    private javax.swing.JSpinner ticketPrice;
    private javax.swing.JList<String> vehicleIDsList;
    // End of variables declaration





    @Override
    public void run(){


        while (! exit ){


            try{


                Terminal a = Terminal.getTerminalByName( startingTerminalList.getSelectedValue());
                City c = City.getCity_by_name( destinationList.getSelectedValue() ) ;

                if (startingTerminal != a ) {
                    this.startingTerminal = a;

                    try{

                        setDlm5();
                        setDlm6();
                        setDlm3();

                    }
                    catch (RuntimeException ex){
//                        ex.printStackTrace();
                    }
                }

                if ( destinationCity != c) {
                    this.destinationCity = c;

                    setDlm3();
                }

            }
            catch (RuntimeException ex){
//                ex.printStackTrace();
            }


            try {

                this.passengersAmount = (int) numberOfPassengers.getValue();

                if (passengersArrayList.size() < passengersAmount && peopleIDsList.getSelectedValue() != null) {

                    Person pr = Person.find_Person_from_ID(Integer.valueOf(peopleIDsList.getSelectedValue()));

                    if (!passengersArrayList.contains(pr))
                        passengersArrayList.add(pr);

                }

                String str = "";

                for (Person a : passengersArrayList) {
                    str += a.getID();
                    str += "\n";
                }

                passengers.setText(str);
            }
            catch (RuntimeException ex){}





            try {
                Thread.sleep(1000);
            } catch (InterruptedException e) {

            }

        }




    }
}
